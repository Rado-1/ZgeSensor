= How to use ZGESensor library in ZGameEditor project =

== Usage in project ==

  # Create ZGE project or use existing one.
  # Include _ZExternalLibrary_ component for ZGESensor library to the _!OnLoaded_ section of _ZApplication_.
  # Initialize the library (`sensorInitLib()`) and used sensors (`sensorUse()`). This code is usually placed to the _!OnLoaded_ section of _ZApplication_ or _!OnStart_ section of _!AppState_ component.
  # Regularly update values from sensors by calling `sensorUpdateData()` function. This is usually placed to _!OnUpdate_ section of _ZApplication_ or _!AppState_ components.
  # Use actual values of sensors (obtained by `sensorGetData()` function) in your code to control behavior of models and other objects.
  # It is recommended to handle disabling sensors (`sensorDisable()`) on pausing the application (handled by _!KeyPress_ component with _!CharCode_ == 255), and enabling sensors (`sensorEnable()`) on resuming the application (_!KeyPress_' _!CharCode_ == 254).
  # Finally, stop the library (`sensorStopLib()`) when application or state is terminated. This is usually placed to _!OnClose_ section of _ZApplication_ component or _!OnLeave_ section of _!AppState_.

== Compiling APK ==

  # Compile your Android application, e.g., use _Project / Android: Build APK (debug)_ menu item.
  # Place `libZGESensor.so` file to the `libs/armeabi` folder.
  # Compile the APK again.
  # Deploy the APK file to your device and install it in Android OS.

_Note 1: The 1st and 2nd steps are required only when the application is built the first time. After that, a single compilation produces correct APK._

_Note 2: Use the step 2 also in the case when updating to a newer version of the ZGESensor library._